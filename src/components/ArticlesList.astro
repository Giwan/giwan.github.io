---
import { formatArticlePublishedDate } from "../utils/helpers";
import type { IPost } from "../types/post";

const getPubDate = (post: string | any) =>
    new Date(post.frontmatter.pubDate || post.frontmatter.published).valueOf();

const allPosts = (await Astro.glob("/src/pages/blog/**/*.{md,mdx}")) as IPost[];

const filterFn = (post: IPost): boolean =>
    Boolean(post.frontmatter.pubDate || post.frontmatter.published);

const posts = allPosts
    .filter(filterFn)
    .sort((a, b) => getPubDate(b) - getPubDate(a));
---

<main class="col-span-full">
    <ul class="grid grid-cols-[repeat(auto-fill,minmax(320px,1fr))] gap-8 mt-12 w-full [&>li:first-child]:md:col-span-2">
        {
            posts.map((post) => (
                <li class="border border-border p-4 rounded-lg bg-card h-[420px] overflow-hidden transition-colors hover:bg-muted/50 group">
                    <a href={post.url} class="block h-full">
                        <h2 class="text-2xl leading-9 mb-1 font-heading font-extrabold text-primary group-hover:underline">{post.frontmatter.title}</h2>
                        <p class="text-muted-foreground mb-4 font-heading text-sm">{formatArticlePublishedDate(post)}</p>
                        <p class="text-foreground leading-7 text-lg">
                            {post.frontmatter.description}
                        </p>
                    </a>
                </li>
            ))
        }
    </ul>
</main>
